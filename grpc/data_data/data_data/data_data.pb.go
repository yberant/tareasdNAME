// Code generated by protoc-gen-go. DO NOT EDIT.
// source: data_data.proto

package data_data

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TransferResCode int32

const (
	TransferResCode_Unknown TransferResCode = 0
	TransferResCode_Ok      TransferResCode = 1
	TransferResCode_Failed  TransferResCode = 2
)

var TransferResCode_name = map[int32]string{
	0: "Unknown",
	1: "Ok",
	2: "Failed",
}

var TransferResCode_value = map[string]int32{
	"Unknown": 0,
	"Ok":      1,
	"Failed":  2,
}

func (x TransferResCode) String() string {
	return proto.EnumName(TransferResCode_name, int32(x))
}

func (TransferResCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{0}
}

type OrderResCode int32

const (
	OrderResCode_No  OrderResCode = 0
	OrderResCode_Yes OrderResCode = 1
)

var OrderResCode_name = map[int32]string{
	0: "No",
	1: "Yes",
}

var OrderResCode_value = map[string]int32{
	"No":  0,
	"Yes": 1,
}

func (x OrderResCode) String() string {
	return proto.EnumName(OrderResCode_name, int32(x))
}

func (OrderResCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{1}
}

type Chunk struct {
	Content              []byte   `protobuf:"bytes,1,opt,name=Content,proto3" json:"Content,omitempty"`
	ChunkId              int64    `protobuf:"varint,2,opt,name=ChunkId,proto3" json:"ChunkId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Chunk) Reset()         { *m = Chunk{} }
func (m *Chunk) String() string { return proto.CompactTextString(m) }
func (*Chunk) ProtoMessage()    {}
func (*Chunk) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{0}
}

func (m *Chunk) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Chunk.Unmarshal(m, b)
}
func (m *Chunk) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Chunk.Marshal(b, m, deterministic)
}
func (m *Chunk) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Chunk.Merge(m, src)
}
func (m *Chunk) XXX_Size() int {
	return xxx_messageInfo_Chunk.Size(m)
}
func (m *Chunk) XXX_DiscardUnknown() {
	xxx_messageInfo_Chunk.DiscardUnknown(m)
}

var xxx_messageInfo_Chunk proto.InternalMessageInfo

func (m *Chunk) GetContent() []byte {
	if m != nil {
		return m.Content
	}
	return nil
}

func (m *Chunk) GetChunkId() int64 {
	if m != nil {
		return m.ChunkId
	}
	return 0
}

type TransferReq struct {
	// Types that are valid to be assigned to Req:
	//	*TransferReq_FileName
	//	*TransferReq_DataChunk
	Req                  isTransferReq_Req `protobuf_oneof:"Req"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *TransferReq) Reset()         { *m = TransferReq{} }
func (m *TransferReq) String() string { return proto.CompactTextString(m) }
func (*TransferReq) ProtoMessage()    {}
func (*TransferReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{1}
}

func (m *TransferReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferReq.Unmarshal(m, b)
}
func (m *TransferReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferReq.Marshal(b, m, deterministic)
}
func (m *TransferReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferReq.Merge(m, src)
}
func (m *TransferReq) XXX_Size() int {
	return xxx_messageInfo_TransferReq.Size(m)
}
func (m *TransferReq) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferReq.DiscardUnknown(m)
}

var xxx_messageInfo_TransferReq proto.InternalMessageInfo

type isTransferReq_Req interface {
	isTransferReq_Req()
}

type TransferReq_FileName struct {
	FileName string `protobuf:"bytes,1,opt,name=FileName,proto3,oneof"`
}

type TransferReq_DataChunk struct {
	DataChunk *Chunk `protobuf:"bytes,2,opt,name=DataChunk,proto3,oneof"`
}

func (*TransferReq_FileName) isTransferReq_Req() {}

func (*TransferReq_DataChunk) isTransferReq_Req() {}

func (m *TransferReq) GetReq() isTransferReq_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *TransferReq) GetFileName() string {
	if x, ok := m.GetReq().(*TransferReq_FileName); ok {
		return x.FileName
	}
	return ""
}

func (m *TransferReq) GetDataChunk() *Chunk {
	if x, ok := m.GetReq().(*TransferReq_DataChunk); ok {
		return x.DataChunk
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*TransferReq) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*TransferReq_FileName)(nil),
		(*TransferReq_DataChunk)(nil),
	}
}

type TransferRes struct {
	ResCode              TransferResCode `protobuf:"varint,1,opt,name=ResCode,proto3,enum=data_data.TransferResCode" json:"ResCode,omitempty"`
	Message              string          `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *TransferRes) Reset()         { *m = TransferRes{} }
func (m *TransferRes) String() string { return proto.CompactTextString(m) }
func (*TransferRes) ProtoMessage()    {}
func (*TransferRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{2}
}

func (m *TransferRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransferRes.Unmarshal(m, b)
}
func (m *TransferRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransferRes.Marshal(b, m, deterministic)
}
func (m *TransferRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransferRes.Merge(m, src)
}
func (m *TransferRes) XXX_Size() int {
	return xxx_messageInfo_TransferRes.Size(m)
}
func (m *TransferRes) XXX_DiscardUnknown() {
	xxx_messageInfo_TransferRes.DiscardUnknown(m)
}

var xxx_messageInfo_TransferRes proto.InternalMessageInfo

func (m *TransferRes) GetResCode() TransferResCode {
	if m != nil {
		return m.ResCode
	}
	return TransferResCode_Unknown
}

func (m *TransferRes) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type OrderData struct {
	ChunkId              int64    `protobuf:"varint,1,opt,name=ChunkId,proto3" json:"ChunkId,omitempty"`
	NodeId               int64    `protobuf:"varint,2,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OrderData) Reset()         { *m = OrderData{} }
func (m *OrderData) String() string { return proto.CompactTextString(m) }
func (*OrderData) ProtoMessage()    {}
func (*OrderData) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{3}
}

func (m *OrderData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderData.Unmarshal(m, b)
}
func (m *OrderData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderData.Marshal(b, m, deterministic)
}
func (m *OrderData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderData.Merge(m, src)
}
func (m *OrderData) XXX_Size() int {
	return xxx_messageInfo_OrderData.Size(m)
}
func (m *OrderData) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderData.DiscardUnknown(m)
}

var xxx_messageInfo_OrderData proto.InternalMessageInfo

func (m *OrderData) GetChunkId() int64 {
	if m != nil {
		return m.ChunkId
	}
	return 0
}

func (m *OrderData) GetNodeId() int64 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

type OrderReq struct {
	// Types that are valid to be assigned to Req:
	//	*OrderReq_FileName
	//	*OrderReq_OrderData
	Req                  isOrderReq_Req `protobuf_oneof:"Req"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *OrderReq) Reset()         { *m = OrderReq{} }
func (m *OrderReq) String() string { return proto.CompactTextString(m) }
func (*OrderReq) ProtoMessage()    {}
func (*OrderReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{4}
}

func (m *OrderReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderReq.Unmarshal(m, b)
}
func (m *OrderReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderReq.Marshal(b, m, deterministic)
}
func (m *OrderReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderReq.Merge(m, src)
}
func (m *OrderReq) XXX_Size() int {
	return xxx_messageInfo_OrderReq.Size(m)
}
func (m *OrderReq) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderReq.DiscardUnknown(m)
}

var xxx_messageInfo_OrderReq proto.InternalMessageInfo

type isOrderReq_Req interface {
	isOrderReq_Req()
}

type OrderReq_FileName struct {
	FileName string `protobuf:"bytes,1,opt,name=FileName,proto3,oneof"`
}

type OrderReq_OrderData struct {
	OrderData *OrderData `protobuf:"bytes,2,opt,name=OrderData,proto3,oneof"`
}

func (*OrderReq_FileName) isOrderReq_Req() {}

func (*OrderReq_OrderData) isOrderReq_Req() {}

func (m *OrderReq) GetReq() isOrderReq_Req {
	if m != nil {
		return m.Req
	}
	return nil
}

func (m *OrderReq) GetFileName() string {
	if x, ok := m.GetReq().(*OrderReq_FileName); ok {
		return x.FileName
	}
	return ""
}

func (m *OrderReq) GetOrderData() *OrderData {
	if x, ok := m.GetReq().(*OrderReq_OrderData); ok {
		return x.OrderData
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*OrderReq) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*OrderReq_FileName)(nil),
		(*OrderReq_OrderData)(nil),
	}
}

type OrderRes struct {
	ResCode              OrderResCode `protobuf:"varint,1,opt,name=ResCode,proto3,enum=data_data.OrderResCode" json:"ResCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *OrderRes) Reset()         { *m = OrderRes{} }
func (m *OrderRes) String() string { return proto.CompactTextString(m) }
func (*OrderRes) ProtoMessage()    {}
func (*OrderRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{5}
}

func (m *OrderRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OrderRes.Unmarshal(m, b)
}
func (m *OrderRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OrderRes.Marshal(b, m, deterministic)
}
func (m *OrderRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OrderRes.Merge(m, src)
}
func (m *OrderRes) XXX_Size() int {
	return xxx_messageInfo_OrderRes.Size(m)
}
func (m *OrderRes) XXX_DiscardUnknown() {
	xxx_messageInfo_OrderRes.DiscardUnknown(m)
}

var xxx_messageInfo_OrderRes proto.InternalMessageInfo

func (m *OrderRes) GetResCode() OrderResCode {
	if m != nil {
		return m.ResCode
	}
	return OrderResCode_No
}

type IdReq struct {
	Data                 string   `protobuf:"bytes,1,opt,name=Data,proto3" json:"Data,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdReq) Reset()         { *m = IdReq{} }
func (m *IdReq) String() string { return proto.CompactTextString(m) }
func (*IdReq) ProtoMessage()    {}
func (*IdReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{6}
}

func (m *IdReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdReq.Unmarshal(m, b)
}
func (m *IdReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdReq.Marshal(b, m, deterministic)
}
func (m *IdReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdReq.Merge(m, src)
}
func (m *IdReq) XXX_Size() int {
	return xxx_messageInfo_IdReq.Size(m)
}
func (m *IdReq) XXX_DiscardUnknown() {
	xxx_messageInfo_IdReq.DiscardUnknown(m)
}

var xxx_messageInfo_IdReq proto.InternalMessageInfo

func (m *IdReq) GetData() string {
	if m != nil {
		return m.Data
	}
	return ""
}

type IdRes struct {
	NodeId               int64    `protobuf:"varint,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *IdRes) Reset()         { *m = IdRes{} }
func (m *IdRes) String() string { return proto.CompactTextString(m) }
func (*IdRes) ProtoMessage()    {}
func (*IdRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{7}
}

func (m *IdRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdRes.Unmarshal(m, b)
}
func (m *IdRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdRes.Marshal(b, m, deterministic)
}
func (m *IdRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdRes.Merge(m, src)
}
func (m *IdRes) XXX_Size() int {
	return xxx_messageInfo_IdRes.Size(m)
}
func (m *IdRes) XXX_DiscardUnknown() {
	xxx_messageInfo_IdRes.DiscardUnknown(m)
}

var xxx_messageInfo_IdRes proto.InternalMessageInfo

func (m *IdRes) GetNodeId() int64 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

type EnReq struct {
	NodeId               int64    `protobuf:"varint,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EnReq) Reset()         { *m = EnReq{} }
func (m *EnReq) String() string { return proto.CompactTextString(m) }
func (*EnReq) ProtoMessage()    {}
func (*EnReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{8}
}

func (m *EnReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnReq.Unmarshal(m, b)
}
func (m *EnReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnReq.Marshal(b, m, deterministic)
}
func (m *EnReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnReq.Merge(m, src)
}
func (m *EnReq) XXX_Size() int {
	return xxx_messageInfo_EnReq.Size(m)
}
func (m *EnReq) XXX_DiscardUnknown() {
	xxx_messageInfo_EnReq.DiscardUnknown(m)
}

var xxx_messageInfo_EnReq proto.InternalMessageInfo

func (m *EnReq) GetNodeId() int64 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

type EnRes struct {
	NodeId               int64        `protobuf:"varint,1,opt,name=NodeId,proto3" json:"NodeId,omitempty"`
	ResCode              OrderResCode `protobuf:"varint,2,opt,name=ResCode,proto3,enum=data_data.OrderResCode" json:"ResCode,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *EnRes) Reset()         { *m = EnRes{} }
func (m *EnRes) String() string { return proto.CompactTextString(m) }
func (*EnRes) ProtoMessage()    {}
func (*EnRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_98b69b572f467341, []int{9}
}

func (m *EnRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EnRes.Unmarshal(m, b)
}
func (m *EnRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EnRes.Marshal(b, m, deterministic)
}
func (m *EnRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EnRes.Merge(m, src)
}
func (m *EnRes) XXX_Size() int {
	return xxx_messageInfo_EnRes.Size(m)
}
func (m *EnRes) XXX_DiscardUnknown() {
	xxx_messageInfo_EnRes.DiscardUnknown(m)
}

var xxx_messageInfo_EnRes proto.InternalMessageInfo

func (m *EnRes) GetNodeId() int64 {
	if m != nil {
		return m.NodeId
	}
	return 0
}

func (m *EnRes) GetResCode() OrderResCode {
	if m != nil {
		return m.ResCode
	}
	return OrderResCode_No
}

func init() {
	proto.RegisterEnum("data_data.TransferResCode", TransferResCode_name, TransferResCode_value)
	proto.RegisterEnum("data_data.OrderResCode", OrderResCode_name, OrderResCode_value)
	proto.RegisterType((*Chunk)(nil), "data_data.Chunk")
	proto.RegisterType((*TransferReq)(nil), "data_data.TransferReq")
	proto.RegisterType((*TransferRes)(nil), "data_data.TransferRes")
	proto.RegisterType((*OrderData)(nil), "data_data.OrderData")
	proto.RegisterType((*OrderReq)(nil), "data_data.OrderReq")
	proto.RegisterType((*OrderRes)(nil), "data_data.OrderRes")
	proto.RegisterType((*IdReq)(nil), "data_data.IdReq")
	proto.RegisterType((*IdRes)(nil), "data_data.IdRes")
	proto.RegisterType((*EnReq)(nil), "data_data.EnReq")
	proto.RegisterType((*EnRes)(nil), "data_data.EnRes")
}

func init() { proto.RegisterFile("data_data.proto", fileDescriptor_98b69b572f467341) }

var fileDescriptor_98b69b572f467341 = []byte{
	// 452 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x6e, 0xd3, 0x40,
	0x10, 0xf5, 0x26, 0x38, 0x89, 0x27, 0x51, 0x63, 0x0d, 0xa8, 0x44, 0x06, 0x29, 0xd5, 0x9e, 0xa2,
	0x4a, 0x54, 0x10, 0x2a, 0x71, 0x80, 0x5e, 0x48, 0x5b, 0x9a, 0x03, 0xa9, 0xb4, 0x82, 0x03, 0x07,
	0x84, 0x16, 0x76, 0x80, 0x2a, 0x65, 0x8d, 0xbd, 0x5b, 0xf1, 0xe7, 0x9c, 0xd1, 0xae, 0x63, 0x77,
	0x63, 0x52, 0xc1, 0x25, 0xca, 0xbc, 0x79, 0x33, 0x6f, 0xde, 0x8c, 0x17, 0xc6, 0x4a, 0x5a, 0xf9,
	0xc9, 0xfd, 0x1c, 0xfd, 0x2c, 0x73, 0x9b, 0x63, 0xd2, 0x00, 0xfc, 0x25, 0xc4, 0x8b, 0xef, 0x37,
	0x7a, 0x8d, 0x13, 0xe8, 0x2f, 0x72, 0x6d, 0x49, 0xdb, 0x09, 0x3b, 0x60, 0xb3, 0x91, 0xa8, 0x43,
	0x9f, 0x71, 0x94, 0xa5, 0x9a, 0x74, 0x0e, 0xd8, 0xac, 0x2b, 0xea, 0x90, 0x2b, 0x18, 0xbe, 0x2b,
	0xa5, 0x36, 0x5f, 0xa9, 0x14, 0x54, 0xe0, 0x63, 0x18, 0x9c, 0x5f, 0x5d, 0xd3, 0x4a, 0xfe, 0x20,
	0xdf, 0x23, 0xb9, 0x88, 0x44, 0x83, 0xe0, 0x53, 0x48, 0x4e, 0xa5, 0x95, 0xbe, 0xd6, 0x37, 0x1a,
	0xce, 0xd3, 0xa3, 0xdb, 0xc9, 0x3c, 0x7e, 0x11, 0x89, 0x5b, 0xd2, 0xeb, 0x18, 0xba, 0x82, 0x0a,
	0xfe, 0x31, 0x54, 0x31, 0x78, 0x0c, 0x7d, 0x41, 0x66, 0x91, 0xab, 0x4a, 0x64, 0x6f, 0x9e, 0x05,
	0x5d, 0x02, 0xa2, 0x63, 0x88, 0x9a, 0xea, 0x4c, 0xbc, 0x25, 0x63, 0xe4, 0x37, 0xf2, 0xda, 0x89,
	0xa8, 0x43, 0x7e, 0x02, 0xc9, 0x65, 0xa9, 0xa8, 0x74, 0xba, 0xa1, 0x57, 0xb6, 0xe5, 0x15, 0xf7,
	0xa1, 0xb7, 0xca, 0x15, 0x35, 0x4b, 0xd8, 0x44, 0x9c, 0x60, 0xe0, 0xcb, 0xff, 0xbd, 0x80, 0xe3,
	0x40, 0x68, 0xb3, 0x80, 0x07, 0xc1, 0xe8, 0x4d, 0xce, 0x2d, 0xa1, 0x09, 0xea, 0x25, 0x9c, 0x34,
	0x32, 0x06, 0x9f, 0xb5, 0x37, 0xf0, 0xb0, 0xdd, 0xa6, 0x6d, 0x9f, 0x3f, 0x82, 0x78, 0xa9, 0xdc,
	0x88, 0x08, 0xf7, 0xbc, 0xbe, 0x1f, 0x4f, 0xf8, 0xff, 0x7c, 0x5a, 0x25, 0x4d, 0xe0, 0x91, 0x6d,
	0x79, 0x9c, 0x42, 0x7c, 0xa6, 0x5d, 0xf5, 0x5d, 0x04, 0x51, 0x11, 0xee, 0xec, 0x10, 0x8e, 0xdc,
	0xf9, 0xbf, 0x91, 0x0f, 0xe7, 0x30, 0x6e, 0x5d, 0x13, 0x87, 0xd0, 0x7f, 0xaf, 0xd7, 0x3a, 0xff,
	0xa5, 0xd3, 0x08, 0x7b, 0xd0, 0xb9, 0x5c, 0xa7, 0x0c, 0x01, 0x7a, 0xe7, 0xf2, 0xea, 0x9a, 0x54,
	0xda, 0x39, 0x9c, 0xc2, 0x28, 0x6c, 0xe6, 0x38, 0xab, 0x3c, 0x8d, 0xb0, 0x0f, 0xdd, 0x0f, 0x64,
	0x52, 0x36, 0xff, 0xcd, 0x60, 0xe0, 0x3c, 0xfb, 0x63, 0x9f, 0xc2, 0x9e, 0xbf, 0xae, 0xa9, 0x75,
	0x70, 0x7f, 0xe7, 0xa7, 0x54, 0x64, 0xbb, 0x71, 0xc3, 0xa3, 0x19, 0xc3, 0x57, 0x30, 0x12, 0x54,
	0xdc, 0x90, 0xb1, 0x5e, 0x1a, 0xef, 0xff, 0xed, 0xac, 0xc8, 0x76, 0x80, 0x55, 0xf5, 0x13, 0x88,
	0xdf, 0x90, 0x5d, 0x2a, 0x0c, 0xdf, 0x82, 0x3f, 0x55, 0xd6, 0x46, 0x0c, 0x8f, 0xf0, 0x05, 0x8c,
	0xcf, 0xb4, 0x2d, 0xa5, 0xfe, 0x42, 0x1b, 0xd1, 0xad, 0x42, 0x7f, 0xa5, 0xac, 0x8d, 0x18, 0x1e,
	0x7d, 0xee, 0xf9, 0x97, 0xff, 0xfc, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x8c, 0x7a, 0x36, 0x69,
	0x0c, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DataDataClient is the client API for DataData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DataDataClient interface {
	ChunksTransfer(ctx context.Context, opts ...grpc.CallOption) (DataData_ChunksTransferClient, error)
	//este se usa solo en caso de que el algoritmo sea de exclusion distribuida:
	RequestOrder(ctx context.Context, opts ...grpc.CallOption) (DataData_RequestOrderClient, error)
	GetId(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*IdRes, error)
	EntranceRequest(ctx context.Context, in *EnReq, opts ...grpc.CallOption) (*EnRes, error)
}

type dataDataClient struct {
	cc *grpc.ClientConn
}

func NewDataDataClient(cc *grpc.ClientConn) DataDataClient {
	return &dataDataClient{cc}
}

func (c *dataDataClient) ChunksTransfer(ctx context.Context, opts ...grpc.CallOption) (DataData_ChunksTransferClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataData_serviceDesc.Streams[0], "/data_data.DataData/ChunksTransfer", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataDataChunksTransferClient{stream}
	return x, nil
}

type DataData_ChunksTransferClient interface {
	Send(*TransferReq) error
	CloseAndRecv() (*TransferRes, error)
	grpc.ClientStream
}

type dataDataChunksTransferClient struct {
	grpc.ClientStream
}

func (x *dataDataChunksTransferClient) Send(m *TransferReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dataDataChunksTransferClient) CloseAndRecv() (*TransferRes, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(TransferRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataDataClient) RequestOrder(ctx context.Context, opts ...grpc.CallOption) (DataData_RequestOrderClient, error) {
	stream, err := c.cc.NewStream(ctx, &_DataData_serviceDesc.Streams[1], "/data_data.DataData/RequestOrder", opts...)
	if err != nil {
		return nil, err
	}
	x := &dataDataRequestOrderClient{stream}
	return x, nil
}

type DataData_RequestOrderClient interface {
	Send(*OrderReq) error
	CloseAndRecv() (*OrderRes, error)
	grpc.ClientStream
}

type dataDataRequestOrderClient struct {
	grpc.ClientStream
}

func (x *dataDataRequestOrderClient) Send(m *OrderReq) error {
	return x.ClientStream.SendMsg(m)
}

func (x *dataDataRequestOrderClient) CloseAndRecv() (*OrderRes, error) {
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	m := new(OrderRes)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *dataDataClient) GetId(ctx context.Context, in *IdReq, opts ...grpc.CallOption) (*IdRes, error) {
	out := new(IdRes)
	err := c.cc.Invoke(ctx, "/data_data.DataData/GetId", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *dataDataClient) EntranceRequest(ctx context.Context, in *EnReq, opts ...grpc.CallOption) (*EnRes, error) {
	out := new(EnRes)
	err := c.cc.Invoke(ctx, "/data_data.DataData/EntranceRequest", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DataDataServer is the server API for DataData service.
type DataDataServer interface {
	ChunksTransfer(DataData_ChunksTransferServer) error
	//este se usa solo en caso de que el algoritmo sea de exclusion distribuida:
	RequestOrder(DataData_RequestOrderServer) error
	GetId(context.Context, *IdReq) (*IdRes, error)
	EntranceRequest(context.Context, *EnReq) (*EnRes, error)
}

// UnimplementedDataDataServer can be embedded to have forward compatible implementations.
type UnimplementedDataDataServer struct {
}

func (*UnimplementedDataDataServer) ChunksTransfer(srv DataData_ChunksTransferServer) error {
	return status.Errorf(codes.Unimplemented, "method ChunksTransfer not implemented")
}
func (*UnimplementedDataDataServer) RequestOrder(srv DataData_RequestOrderServer) error {
	return status.Errorf(codes.Unimplemented, "method RequestOrder not implemented")
}
func (*UnimplementedDataDataServer) GetId(ctx context.Context, req *IdReq) (*IdRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetId not implemented")
}
func (*UnimplementedDataDataServer) EntranceRequest(ctx context.Context, req *EnReq) (*EnRes, error) {
	return nil, status.Errorf(codes.Unimplemented, "method EntranceRequest not implemented")
}

func RegisterDataDataServer(s *grpc.Server, srv DataDataServer) {
	s.RegisterService(&_DataData_serviceDesc, srv)
}

func _DataData_ChunksTransfer_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DataDataServer).ChunksTransfer(&dataDataChunksTransferServer{stream})
}

type DataData_ChunksTransferServer interface {
	SendAndClose(*TransferRes) error
	Recv() (*TransferReq, error)
	grpc.ServerStream
}

type dataDataChunksTransferServer struct {
	grpc.ServerStream
}

func (x *dataDataChunksTransferServer) SendAndClose(m *TransferRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dataDataChunksTransferServer) Recv() (*TransferReq, error) {
	m := new(TransferReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _DataData_RequestOrder_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(DataDataServer).RequestOrder(&dataDataRequestOrderServer{stream})
}

type DataData_RequestOrderServer interface {
	SendAndClose(*OrderRes) error
	Recv() (*OrderReq, error)
	grpc.ServerStream
}

type dataDataRequestOrderServer struct {
	grpc.ServerStream
}

func (x *dataDataRequestOrderServer) SendAndClose(m *OrderRes) error {
	return x.ServerStream.SendMsg(m)
}

func (x *dataDataRequestOrderServer) Recv() (*OrderReq, error) {
	m := new(OrderReq)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _DataData_GetId_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataDataServer).GetId(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/data_data.DataData/GetId",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataDataServer).GetId(ctx, req.(*IdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _DataData_EntranceRequest_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DataDataServer).EntranceRequest(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/data_data.DataData/EntranceRequest",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DataDataServer).EntranceRequest(ctx, req.(*EnReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _DataData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "data_data.DataData",
	HandlerType: (*DataDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetId",
			Handler:    _DataData_GetId_Handler,
		},
		{
			MethodName: "EntranceRequest",
			Handler:    _DataData_EntranceRequest_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "ChunksTransfer",
			Handler:       _DataData_ChunksTransfer_Handler,
			ClientStreams: true,
		},
		{
			StreamName:    "RequestOrder",
			Handler:       _DataData_RequestOrder_Handler,
			ClientStreams: true,
		},
	},
	Metadata: "data_data.proto",
}
